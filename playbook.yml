---
- name: Deploy Weather App with Docker and Nginx
  hosts: myazurevm
  become: true
  vars_prompt:
    - name: "api_key"
      prompt: "Please enter your OpenWeatherMap API key\n"
      private: true

    - name: "letsencrypt_email"
      prompt: "Please enter your Let's Encrypt email"
      private: no

    - name: "domain_name"
      prompt: "Please enter your domain name"
      private: no

  tasks:
    - name: Update APT package list
      apt:
        update_cache: yes

    - name: Install dependencies
      apt:
        name:
          - git
          - docker.io
          - docker-compose
        state: present

    # - name: Install Docker and Docker-Compose
    #   apt:
    #     name:
    #       - docker.io
    #       - docker-compose
    #     state: present
    #     update_cache: yes

    - name: Clone repository
      git:
        repo: "https://github.com/HubertZgola/weatherapp.git"
        dest: /weatherapp
        force: yes

    - name: Create .env file in backend
      copy:
        content: "APPID={{ api_key }}"
        dest: /weatherapp/backend/.env

    - name: Build and run Docker containers using Docker Compose binary
      command: docker-compose up -d --build
      args:
        chdir: /weatherapp

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Remove default nginx config
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Install certbot and python3-certbot-nginx
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Generate SSL certificate using Certbot
      become: yes
      shell: |
        certbot --nginx -m {{ letsencrypt_email }} --non-interactive --agree-tos --redirect -d {{ domain_name }}
      # args:
      #   creates: /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem

    - name: Setup Nginx as a Reverse Proxy
      blockinfile:
        path: /etc/nginx/sites-available/default
        block: |
          server {
            location / {
              proxy_pass https://localhost:8000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /api {
              proxy_pass https://localhost:9000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
            }}

    - name: Restart Nginx to apply config
      systemd:
        name: nginx
        state: restarted

    # - name: Add SSH public key
    #   authorized_key:
    #     user: ubuntu
    #     state: present
    #     key: "{{ lookup('file', 'id_rsa_internship.pub') }}"
